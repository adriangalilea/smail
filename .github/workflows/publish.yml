name: Test and Publish

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need history to check for version changes
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        
      - name: Install dependencies
        run: |
          uv pip install --system build toml
          uv pip install --system -e .
          uv pip install --system ruff
          
      - name: Run ruff
        run: ruff check
        
      - name: Check if version changed
        id: version_check
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          if [ "$VERSION" = "0.1.0" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "Publishing version 0.1.0"
          else
            if git diff HEAD~1 HEAD --name-only | grep -q "pyproject.toml"; then
              OLD_VERSION=$(git show HEAD~1:pyproject.toml | python -c "import sys, toml; print(toml.load(sys.stdin)['project']['version'])" 2>/dev/null || echo "")
              NEW_VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
              if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
                echo "version_changed=true" >> $GITHUB_OUTPUT
                echo "Version changed from $OLD_VERSION to $NEW_VERSION"
              else
                echo "version_changed=false" >> $GITHUB_OUTPUT
              fi
            else
              echo "version_changed=false" >> $GITHUB_OUTPUT
            fi
          fi
          
      - name: Build package
        if: steps.version_check.outputs.version_changed == 'true'
        run: python -m build
        
      - name: Publish to PyPI
        if: steps.version_check.outputs.version_changed == 'true' && github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@release/v1